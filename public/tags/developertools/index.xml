<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DeveloperTools on AWS HPC Workshops</title>
    <link>https://www.hpcworkshops.com/tags/developertools.html</link>
    <description>Recent content in DeveloperTools on AWS HPC Workshops</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 30 Sep 2021 10:46:30 -0400</lastBuildDate><atom:link href="https://www.hpcworkshops.com/tags/developertools/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>a. Create a repo in CodeCommit</title>
      <link>https://www.hpcworkshops.com/05-cicd-pipeline/02-codecommit-repo.html</link>
      <pubDate>Thu, 30 Sep 2021 10:46:30 -0400</pubDate>
      
      <guid>https://www.hpcworkshops.com/05-cicd-pipeline/02-codecommit-repo.html</guid>
      <description>This lab requires an AWS Cloud9 IDE. If you do not have an AWS Cloud9 IDE set up, complete the Prepartion section of the workshop.
   In the AWS Management Console search bar, type and select Cloud9.
  Choose open IDE for the Cloud9 instance set up previously. It may take a few moments for the IDE to open. AWS Cloud9 stops and restarts the instance so that you do not pay compute charges when no longer using the Cloud9 IDE.</description>
    </item>
    
    <item>
      <title>b. Create Docker and buildspec files</title>
      <link>https://www.hpcworkshops.com/05-cicd-pipeline/03-docker-buildspec.html</link>
      <pubDate>Thu, 30 Sep 2021 10:46:30 -0400</pubDate>
      
      <guid>https://www.hpcworkshops.com/05-cicd-pipeline/03-docker-buildspec.html</guid>
      <description>If you have not created the container repository as part Lab II, complete the Create container repository section of Lab II before proceeding.
 In this section, you will create a Docker container for the application and a buildspec file in the CodeCommit repository created in the previous section
A buildspec is a collection of build commands and related settings in YAML format. This file is used by AWS CodeBuild to automatically create an updated version of the container upon code changes.</description>
    </item>
    
    <item>
      <title>c. Setup project in CodeBuild</title>
      <link>https://www.hpcworkshops.com/05-cicd-pipeline/04-codebuild.html</link>
      <pubDate>Thu, 30 Sep 2021 10:46:30 -0400</pubDate>
      
      <guid>https://www.hpcworkshops.com/05-cicd-pipeline/04-codebuild.html</guid>
      <description>In this section, you will create and setup a build project in AWS CodeBuild.
AWS CodeBuild is a fully managed continuous integration service that compiles source code, runs tests, and produces software packages that are ready to deploy.
With CodeBuild, you donâ€™t need to provision, manage, and scale your own build servers
  In the AWS Management Console search bar, type and select CodeBuild. Double check that you are using CodeBuild in the same AWS Region that you have used in the previous steps.</description>
    </item>
    
    <item>
      <title>d. Create a pipeline</title>
      <link>https://www.hpcworkshops.com/05-cicd-pipeline/05-codepipeline.html</link>
      <pubDate>Thu, 30 Sep 2021 10:46:30 -0400</pubDate>
      
      <guid>https://www.hpcworkshops.com/05-cicd-pipeline/05-codepipeline.html</guid>
      <description>In this section, you will create a pipeline using AWS CodePipeline.
AWS CodePipeline is a fully managed continuous delivery service that helps you automate your release pipelines for fast and reliable application and infrastructure updates. CodePipeline automates the build, test, and deploy phases of your release process every time there is a code change, based on the release model you define
In the first section of this lab you created a CodeCommit repo and created a sample Docker container and corresponding buildspec file to build the container.</description>
    </item>
    
    <item>
      <title>e. Auto execute pipeline</title>
      <link>https://www.hpcworkshops.com/05-cicd-pipeline/06-updatebuild.html</link>
      <pubDate>Thu, 30 Sep 2021 10:46:30 -0400</pubDate>
      
      <guid>https://www.hpcworkshops.com/05-cicd-pipeline/06-updatebuild.html</guid>
      <description>In this section, we will update the sample Dockerfile created earlier to automatically trigger the container build and update to Amazon ECR as part of the CodePipeline we created earlier.
We will modify the Dockerfile to run a Genomics workflow using Nextflow.
We will go over the Nextflow architecture and job execution/orchestration more in the next lab. For now, we will go ahead and update the repository and see how the CICD pipeline works for your build.</description>
    </item>
    
    <item>
      <title>f. Conclusion</title>
      <link>https://www.hpcworkshops.com/05-cicd-pipeline/07-conclusion.html</link>
      <pubDate>Thu, 30 Sep 2021 10:46:30 -0400</pubDate>
      
      <guid>https://www.hpcworkshops.com/05-cicd-pipeline/07-conclusion.html</guid>
      <description>Congratulations! You built a CI/CD pipeline uisng CodePipeline.
Your pipeline began with code in CodeCommit, built a Docker container and pushed the image to Elastic Container Registry (ECR) using CodeBuild.
In the next lab, you will learn about container orchestration and how to deploy your container using AWS Batch.</description>
    </item>
    
  </channel>
</rss>
