AWSTemplateFormatVersion: 2010-09-09
Description: Deploys resources for an AWS Batch environment.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "AWS Batch Environment Config"
        Parameters:
        - VpcId
        - SubnetIds
        - SGIds
        - DefaultCEMinvCpus
        - DefaultCEMaxvCpus
        - BatchJDName

    ParameterLabels:
      VpcId:
        default: VPC ID
      SubnetIds:
        default: VPC Subnet IDs
      SGIds:
        default: VPC security group IDs
      DefaultCEMinvCpus:
        default: Default Queue Min vCPU count
      DefaultCEMaxvCpus:
        default: Default Queue Max vCPU count
      BatchJDName:
        default: Default Batch Job Definition name

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: 'The VPC to create security groups and deploy AWS Batch to. NOTE: Must be the same VPC as the provided subnet IDs.'
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: 'Subnets you want your batch compute environment to launch in. We recommend private subnets. NOTE: Must be from the VPC provided.'
  SGIds:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: 'Security groups for compute environment in the same VPC. NOTE: A custom security group is recommended'
  DefaultCEMinvCpus:
    Type: Number
    Description: Minimum number of CPUs in the default compute environment. Default 0.
    Default: 0
    MinValue: 0
  DefaultCEMaxvCpus:
    Type: Number
    Description: Maximum number of CPUs in the default compute environment. Should be >= than MinCpus
    Default: 20000
    MinValue: 0
  BatchJDName:
    Type: String
    Description: 'Batch Job Definition name for FSI demo'
    Default: 'fsi-demo'

Resources:
# Batch job queue
  DefaultComputeEnv:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      ComputeEnvironmentName: !Sub 
       - fsi-demo-ce
       - StackGuid: !Select [ 2, !Split [ "/", !Ref "AWS::StackId" ]]
      ReplaceComputeEnvironment: false
      Type: MANAGED
      State: ENABLED
      ComputeResources:
        AllocationStrategy: BEST_FIT_PROGRESSIVE
        UpdateToLatestImageVersion: true #use the enhanced updating of compute environments to update AMIs
        InstanceRole: !GetAtt ECSInstanceProfile.Arn
        SecurityGroupIds: !Ref SGIds
        InstanceTypes:
          - c6i
          - c5
          - c5a
        MinvCpus: !Ref DefaultCEMinvCpus
        MaxvCpus: !Ref DefaultCEMaxvCpus
        Subnets: !Ref SubnetIds
        Type: EC2
        Tags:
          Name: !Sub
            - fsi-demo-batch
            - StackGuid: !Select [ 2, !Split [ "/", !Ref "AWS::StackId" ]]

  DefaultQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      JobQueueName: !Sub
        - fsi-demo
        - StackGuid: !Select [ 2, !Split [ "/", !Ref "AWS::StackId" ]]
      Priority: 10
      State: ENABLED
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref DefaultComputeEnv

  BatchServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: batch.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole

  ECSInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
      - arn:aws:iam::aws:policy/AmazonS3FullAccess
      - arn:aws:iam::aws:policy/AWSBatchFullAccess

  ECSInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref ECSInstanceRole 

# Batch job definition
  JobExecRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: ecs-tasks.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonS3FullAccess
      - arn:aws:iam::aws:policy/AWSBatchFullAccess
      - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  JobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      JobDefinitionName: !Ref BatchJDName
      ContainerProperties:
        Image:  !Sub
          - ${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/${Repository}:${Version}
          - Repository: fsi-demo
            Version: latest
        ResourceRequirements:
        - Type: VCPU
          Value: '1'
        - Type: MEMORY
          Value: '1800'
        ExecutionRoleArn: !GetAtt JobExecRole.Arn
        Command:
        - Ref::S3bucket
        - Ref::S3key
        Environment:
        - Name: threshold
          Value: 10  
        - Name: JOB_DF
          Value: !Ref BatchJDName
      Timeout:
        AttemptDurationSeconds: 3600
      RetryStrategy:
        Attempts: 2

Outputs:
  DefaultJobQueueArn:
    Value: !Ref DefaultQueue
  DefaultJobDefinition:
    Value: !Ref JobDefinition
